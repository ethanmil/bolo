// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: server/bolo_server.proto

package server

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type World struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerCount int32 `protobuf:"varint,2,opt,name=playerCount,proto3" json:"playerCount,omitempty"`
}

func (x *World) Reset() {
	*x = World{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{0}
}

func (x *World) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *World) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

type WorldMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles []*WorldMap_Tile `protobuf:"bytes,1,rep,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *WorldMap) Reset() {
	*x = WorldMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMap) ProtoMessage() {}

func (x *WorldMap) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMap.ProtoReflect.Descriptor instead.
func (*WorldMap) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{1}
}

func (x *WorldMap) GetTiles() []*WorldMap_Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type WorldModification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Type   int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Health int32 `protobuf:"varint,4,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *WorldModification) Reset() {
	*x = WorldModification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldModification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldModification) ProtoMessage() {}

func (x *WorldModification) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldModification.ProtoReflect.Descriptor instead.
func (*WorldModification) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{2}
}

func (x *WorldModification) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WorldModification) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WorldModification) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WorldModification) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TankID int32  `protobuf:"varint,2,opt,name=tankID,proto3" json:"tankID,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetTankID() int32 {
	if x != nil {
		return x.TankID
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Tank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X  float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y  float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Tank) Reset() {
	*x = Tank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tank) ProtoMessage() {}

func (x *Tank) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tank.ProtoReflect.Descriptor instead.
func (*Tank) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{4}
}

func (x *Tank) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tank) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Tank) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Writer string `protobuf:"bytes,2,opt,name=writer,proto3" json:"writer,omitempty"`
	Body   string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{5}
}

func (x *Message) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type WorldMap_Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X    int32  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y    int32  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *WorldMap_Tile) Reset() {
	*x = WorldMap_Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_bolo_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMap_Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMap_Tile) ProtoMessage() {}

func (x *WorldMap_Tile) ProtoReflect() protoreflect.Message {
	mi := &file_server_bolo_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMap_Tile.ProtoReflect.Descriptor instead.
func (*WorldMap_Tile) Descriptor() ([]byte, []int) {
	return file_server_bolo_server_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WorldMap_Tile) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WorldMap_Tile) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WorldMap_Tile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_server_bolo_server_proto protoreflect.FileDescriptor

var file_server_bolo_server_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x6f, 0x6c, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x39, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a,
	0x08, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5b,
	0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x44, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x32, 0x0a, 0x04, 0x54, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x45, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x32, 0xc9, 0x02, 0x0a,
	0x0a, 0x42, 0x6f, 0x6c, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a, 0x0e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x30, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61,
	0x70, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d,
	0x61, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2e, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x1a, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x54, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x28, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74,
	0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x61, 0x6e, 0x6d, 0x69, 0x6c, 0x2f,
	0x62, 0x6f, 0x6c, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_server_bolo_server_proto_rawDescOnce sync.Once
	file_server_bolo_server_proto_rawDescData = file_server_bolo_server_proto_rawDesc
)

func file_server_bolo_server_proto_rawDescGZIP() []byte {
	file_server_bolo_server_proto_rawDescOnce.Do(func() {
		file_server_bolo_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_bolo_server_proto_rawDescData)
	})
	return file_server_bolo_server_proto_rawDescData
}

var file_server_bolo_server_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_server_bolo_server_proto_goTypes = []interface{}{
	(*World)(nil),             // 0: server.World
	(*WorldMap)(nil),          // 1: server.WorldMap
	(*WorldModification)(nil), // 2: server.WorldModification
	(*Player)(nil),            // 3: server.Player
	(*Tank)(nil),              // 4: server.Tank
	(*Message)(nil),           // 5: server.Message
	(*WorldMap_Tile)(nil),     // 6: server.WorldMap.Tile
}
var file_server_bolo_server_proto_depIdxs = []int32{
	6, // 0: server.WorldMap.tiles:type_name -> server.WorldMap.Tile
	0, // 1: server.BoloServer.GetPlayersOnline:input_type -> server.World
	0, // 2: server.BoloServer.GetWorldMap:input_type -> server.World
	0, // 3: server.BoloServer.GetWorldModifications:input_type -> server.World
	0, // 4: server.BoloServer.GetTanks:input_type -> server.World
	4, // 5: server.BoloServer.SendTankData:input_type -> server.Tank
	5, // 6: server.BoloServer.Chat:input_type -> server.Message
	3, // 7: server.BoloServer.GetPlayersOnline:output_type -> server.Player
	1, // 8: server.BoloServer.GetWorldMap:output_type -> server.WorldMap
	2, // 9: server.BoloServer.GetWorldModifications:output_type -> server.WorldModification
	4, // 10: server.BoloServer.GetTanks:output_type -> server.Tank
	4, // 11: server.BoloServer.SendTankData:output_type -> server.Tank
	5, // 12: server.BoloServer.Chat:output_type -> server.Message
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_server_bolo_server_proto_init() }
func file_server_bolo_server_proto_init() {
	if File_server_bolo_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_bolo_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*World); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldModification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_bolo_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldMap_Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_bolo_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_bolo_server_proto_goTypes,
		DependencyIndexes: file_server_bolo_server_proto_depIdxs,
		MessageInfos:      file_server_bolo_server_proto_msgTypes,
	}.Build()
	File_server_bolo_server_proto = out.File
	file_server_bolo_server_proto_rawDesc = nil
	file_server_bolo_server_proto_goTypes = nil
	file_server_bolo_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BoloServerClient is the client API for BoloServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BoloServerClient interface {
	GetPlayersOnline(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetPlayersOnlineClient, error)
	GetWorldMap(ctx context.Context, in *World, opts ...grpc.CallOption) (*WorldMap, error)
	GetWorldModifications(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetWorldModificationsClient, error)
	GetTanks(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetTanksClient, error)
	SendTankData(ctx context.Context, opts ...grpc.CallOption) (BoloServer_SendTankDataClient, error)
	Chat(ctx context.Context, opts ...grpc.CallOption) (BoloServer_ChatClient, error)
}

type boloServerClient struct {
	cc grpc.ClientConnInterface
}

func NewBoloServerClient(cc grpc.ClientConnInterface) BoloServerClient {
	return &boloServerClient{cc}
}

func (c *boloServerClient) GetPlayersOnline(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetPlayersOnlineClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoloServer_serviceDesc.Streams[0], "/server.BoloServer/GetPlayersOnline", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerGetPlayersOnlineClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BoloServer_GetPlayersOnlineClient interface {
	Recv() (*Player, error)
	grpc.ClientStream
}

type boloServerGetPlayersOnlineClient struct {
	grpc.ClientStream
}

func (x *boloServerGetPlayersOnlineClient) Recv() (*Player, error) {
	m := new(Player)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *boloServerClient) GetWorldMap(ctx context.Context, in *World, opts ...grpc.CallOption) (*WorldMap, error) {
	out := new(WorldMap)
	err := c.cc.Invoke(ctx, "/server.BoloServer/GetWorldMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boloServerClient) GetWorldModifications(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetWorldModificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoloServer_serviceDesc.Streams[1], "/server.BoloServer/GetWorldModifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerGetWorldModificationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BoloServer_GetWorldModificationsClient interface {
	Recv() (*WorldModification, error)
	grpc.ClientStream
}

type boloServerGetWorldModificationsClient struct {
	grpc.ClientStream
}

func (x *boloServerGetWorldModificationsClient) Recv() (*WorldModification, error) {
	m := new(WorldModification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *boloServerClient) GetTanks(ctx context.Context, in *World, opts ...grpc.CallOption) (BoloServer_GetTanksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoloServer_serviceDesc.Streams[2], "/server.BoloServer/GetTanks", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerGetTanksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BoloServer_GetTanksClient interface {
	Recv() (*Tank, error)
	grpc.ClientStream
}

type boloServerGetTanksClient struct {
	grpc.ClientStream
}

func (x *boloServerGetTanksClient) Recv() (*Tank, error) {
	m := new(Tank)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *boloServerClient) SendTankData(ctx context.Context, opts ...grpc.CallOption) (BoloServer_SendTankDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoloServer_serviceDesc.Streams[3], "/server.BoloServer/SendTankData", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerSendTankDataClient{stream}
	return x, nil
}

type BoloServer_SendTankDataClient interface {
	Send(*Tank) error
	CloseAndRecv() (*Tank, error)
	grpc.ClientStream
}

type boloServerSendTankDataClient struct {
	grpc.ClientStream
}

func (x *boloServerSendTankDataClient) Send(m *Tank) error {
	return x.ClientStream.SendMsg(m)
}

func (x *boloServerSendTankDataClient) CloseAndRecv() (*Tank, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Tank)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *boloServerClient) Chat(ctx context.Context, opts ...grpc.CallOption) (BoloServer_ChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoloServer_serviceDesc.Streams[4], "/server.BoloServer/Chat", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerChatClient{stream}
	return x, nil
}

type BoloServer_ChatClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type boloServerChatClient struct {
	grpc.ClientStream
}

func (x *boloServerChatClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *boloServerChatClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BoloServerServer is the server API for BoloServer service.
type BoloServerServer interface {
	GetPlayersOnline(*World, BoloServer_GetPlayersOnlineServer) error
	GetWorldMap(context.Context, *World) (*WorldMap, error)
	GetWorldModifications(*World, BoloServer_GetWorldModificationsServer) error
	GetTanks(*World, BoloServer_GetTanksServer) error
	SendTankData(BoloServer_SendTankDataServer) error
	Chat(BoloServer_ChatServer) error
}

// UnimplementedBoloServerServer can be embedded to have forward compatible implementations.
type UnimplementedBoloServerServer struct {
}

func (*UnimplementedBoloServerServer) GetPlayersOnline(*World, BoloServer_GetPlayersOnlineServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPlayersOnline not implemented")
}
func (*UnimplementedBoloServerServer) GetWorldMap(context.Context, *World) (*WorldMap, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorldMap not implemented")
}
func (*UnimplementedBoloServerServer) GetWorldModifications(*World, BoloServer_GetWorldModificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetWorldModifications not implemented")
}
func (*UnimplementedBoloServerServer) GetTanks(*World, BoloServer_GetTanksServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTanks not implemented")
}
func (*UnimplementedBoloServerServer) SendTankData(BoloServer_SendTankDataServer) error {
	return status.Errorf(codes.Unimplemented, "method SendTankData not implemented")
}
func (*UnimplementedBoloServerServer) Chat(BoloServer_ChatServer) error {
	return status.Errorf(codes.Unimplemented, "method Chat not implemented")
}

func RegisterBoloServerServer(s *grpc.Server, srv BoloServerServer) {
	s.RegisterService(&_BoloServer_serviceDesc, srv)
}

func _BoloServer_GetPlayersOnline_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(World)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BoloServerServer).GetPlayersOnline(m, &boloServerGetPlayersOnlineServer{stream})
}

type BoloServer_GetPlayersOnlineServer interface {
	Send(*Player) error
	grpc.ServerStream
}

type boloServerGetPlayersOnlineServer struct {
	grpc.ServerStream
}

func (x *boloServerGetPlayersOnlineServer) Send(m *Player) error {
	return x.ServerStream.SendMsg(m)
}

func _BoloServer_GetWorldMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(World)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoloServerServer).GetWorldMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.BoloServer/GetWorldMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoloServerServer).GetWorldMap(ctx, req.(*World))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoloServer_GetWorldModifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(World)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BoloServerServer).GetWorldModifications(m, &boloServerGetWorldModificationsServer{stream})
}

type BoloServer_GetWorldModificationsServer interface {
	Send(*WorldModification) error
	grpc.ServerStream
}

type boloServerGetWorldModificationsServer struct {
	grpc.ServerStream
}

func (x *boloServerGetWorldModificationsServer) Send(m *WorldModification) error {
	return x.ServerStream.SendMsg(m)
}

func _BoloServer_GetTanks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(World)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BoloServerServer).GetTanks(m, &boloServerGetTanksServer{stream})
}

type BoloServer_GetTanksServer interface {
	Send(*Tank) error
	grpc.ServerStream
}

type boloServerGetTanksServer struct {
	grpc.ServerStream
}

func (x *boloServerGetTanksServer) Send(m *Tank) error {
	return x.ServerStream.SendMsg(m)
}

func _BoloServer_SendTankData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BoloServerServer).SendTankData(&boloServerSendTankDataServer{stream})
}

type BoloServer_SendTankDataServer interface {
	SendAndClose(*Tank) error
	Recv() (*Tank, error)
	grpc.ServerStream
}

type boloServerSendTankDataServer struct {
	grpc.ServerStream
}

func (x *boloServerSendTankDataServer) SendAndClose(m *Tank) error {
	return x.ServerStream.SendMsg(m)
}

func (x *boloServerSendTankDataServer) Recv() (*Tank, error) {
	m := new(Tank)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BoloServer_Chat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BoloServerServer).Chat(&boloServerChatServer{stream})
}

type BoloServer_ChatServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type boloServerChatServer struct {
	grpc.ServerStream
}

func (x *boloServerChatServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *boloServerChatServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BoloServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.BoloServer",
	HandlerType: (*BoloServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWorldMap",
			Handler:    _BoloServer_GetWorldMap_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPlayersOnline",
			Handler:       _BoloServer_GetPlayersOnline_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetWorldModifications",
			Handler:       _BoloServer_GetWorldModifications_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTanks",
			Handler:       _BoloServer_GetTanks_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendTankData",
			Handler:       _BoloServer_SendTankData_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Chat",
			Handler:       _BoloServer_Chat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server/bolo_server.proto",
}
