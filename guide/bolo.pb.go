// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: guide/bolo.proto

package guide

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WorldInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WorldInput) Reset() {
	*x = WorldInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldInput) ProtoMessage() {}

func (x *WorldInput) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldInput.ProtoReflect.Descriptor instead.
func (*WorldInput) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{0}
}

func (x *WorldInput) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WorldMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeH int32    `protobuf:"varint,1,opt,name=sizeH,proto3" json:"sizeH,omitempty"`
	SizeW int32    `protobuf:"varint,2,opt,name=sizeW,proto3" json:"sizeW,omitempty"`
	Tiles []string `protobuf:"bytes,3,rep,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *WorldMap) Reset() {
	*x = WorldMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMap) ProtoMessage() {}

func (x *WorldMap) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMap.ProtoReflect.Descriptor instead.
func (*WorldMap) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{1}
}

func (x *WorldMap) GetSizeH() int32 {
	if x != nil {
		return x.SizeH
	}
	return 0
}

func (x *WorldMap) GetSizeW() int32 {
	if x != nil {
		return x.SizeW
	}
	return 0
}

func (x *WorldMap) GetTiles() []string {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type Tank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X     float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y     float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Angle float32 `protobuf:"fixed32,4,opt,name=angle,proto3" json:"angle,omitempty"`
	Name  string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tank) Reset() {
	*x = Tank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tank) ProtoMessage() {}

func (x *Tank) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tank.ProtoReflect.Descriptor instead.
func (*Tank) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{2}
}

func (x *Tank) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tank) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Tank) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Tank) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *Tank) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Bullet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TankId int32   `protobuf:"varint,2,opt,name=tankId,proto3" json:"tankId,omitempty"`
	X      float32 `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      float32 `protobuf:"fixed32,4,opt,name=y,proto3" json:"y,omitempty"`
	Angle  float32 `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
}

func (x *Bullet) Reset() {
	*x = Bullet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bullet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bullet) ProtoMessage() {}

func (x *Bullet) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bullet.ProtoReflect.Descriptor instead.
func (*Bullet) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{3}
}

func (x *Bullet) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bullet) GetTankId() int32 {
	if x != nil {
		return x.TankId
	}
	return 0
}

func (x *Bullet) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Bullet) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Bullet) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bullets  []*Bullet `protobuf:"bytes,1,rep,name=bullets,proto3" json:"bullets,omitempty"`
	Tanks    []*Tank   `protobuf:"bytes,2,rep,name=tanks,proto3" json:"tanks,omitempty"`
	WorldMap *WorldMap `protobuf:"bytes,3,opt,name=worldMap,proto3" json:"worldMap,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{4}
}

func (x *GameState) GetBullets() []*Bullet {
	if x != nil {
		return x.Bullets
	}
	return nil
}

func (x *GameState) GetTanks() []*Tank {
	if x != nil {
		return x.Tanks
	}
	return nil
}

func (x *GameState) GetWorldMap() *WorldMap {
	if x != nil {
		return x.WorldMap
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Writer string `protobuf:"bytes,2,opt,name=writer,proto3" json:"writer,omitempty"`
	Body   string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_bolo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_guide_bolo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_guide_bolo_proto_rawDescGZIP(), []int{5}
}

func (x *Message) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_guide_bolo_proto protoreflect.FileDescriptor

var file_guide_bolo_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2f, 0x62, 0x6f, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x67, 0x75, 0x69, 0x64, 0x65, 0x22, 0x1c, 0x0a, 0x0a, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a,
	0x65, 0x57, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x57, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x04, 0x54, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x06, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x42,
	0x75, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x05, 0x74, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x6e, 0x6b,
	0x73, 0x12, 0x2b, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x4d, 0x61, 0x70, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x22, 0x45,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x32, 0xa2, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x6c, 0x6f, 0x12, 0x2a,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6e, 0x6b, 0x12, 0x0b,
	0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x1a, 0x0b, 0x2e, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x2e, 0x54, 0x61, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x15, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x11, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x04,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x61, 0x6e, 0x6d, 0x69,
	0x6c, 0x2f, 0x62, 0x6f, 0x6c, 0x6f, 0x2f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_guide_bolo_proto_rawDescOnce sync.Once
	file_guide_bolo_proto_rawDescData = file_guide_bolo_proto_rawDesc
)

func file_guide_bolo_proto_rawDescGZIP() []byte {
	file_guide_bolo_proto_rawDescOnce.Do(func() {
		file_guide_bolo_proto_rawDescData = protoimpl.X.CompressGZIP(file_guide_bolo_proto_rawDescData)
	})
	return file_guide_bolo_proto_rawDescData
}

var file_guide_bolo_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_guide_bolo_proto_goTypes = []interface{}{
	(*WorldInput)(nil), // 0: guide.WorldInput
	(*WorldMap)(nil),   // 1: guide.WorldMap
	(*Tank)(nil),       // 2: guide.Tank
	(*Bullet)(nil),     // 3: guide.Bullet
	(*GameState)(nil),  // 4: guide.GameState
	(*Message)(nil),    // 5: guide.Message
}
var file_guide_bolo_proto_depIdxs = []int32{
	3, // 0: guide.GameState.bullets:type_name -> guide.Bullet
	2, // 1: guide.GameState.tanks:type_name -> guide.Tank
	1, // 2: guide.GameState.worldMap:type_name -> guide.WorldMap
	2, // 3: guide.Bolo.RegisterTank:input_type -> guide.Tank
	0, // 4: guide.Bolo.ServerGameStateStream:input_type -> guide.WorldInput
	5, // 5: guide.Bolo.Chat:input_type -> guide.Message
	2, // 6: guide.Bolo.RegisterTank:output_type -> guide.Tank
	4, // 7: guide.Bolo.ServerGameStateStream:output_type -> guide.GameState
	5, // 8: guide.Bolo.Chat:output_type -> guide.Message
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_guide_bolo_proto_init() }
func file_guide_bolo_proto_init() {
	if File_guide_bolo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_guide_bolo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_bolo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_bolo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_bolo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bullet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_bolo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_bolo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_guide_bolo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_guide_bolo_proto_goTypes,
		DependencyIndexes: file_guide_bolo_proto_depIdxs,
		MessageInfos:      file_guide_bolo_proto_msgTypes,
	}.Build()
	File_guide_bolo_proto = out.File
	file_guide_bolo_proto_rawDesc = nil
	file_guide_bolo_proto_goTypes = nil
	file_guide_bolo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BoloClient is the client API for Bolo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BoloClient interface {
	RegisterTank(ctx context.Context, in *Tank, opts ...grpc.CallOption) (*Tank, error)
	ServerGameStateStream(ctx context.Context, in *WorldInput, opts ...grpc.CallOption) (Bolo_ServerGameStateStreamClient, error)
	Chat(ctx context.Context, opts ...grpc.CallOption) (Bolo_ChatClient, error)
}

type boloClient struct {
	cc grpc.ClientConnInterface
}

func NewBoloClient(cc grpc.ClientConnInterface) BoloClient {
	return &boloClient{cc}
}

func (c *boloClient) RegisterTank(ctx context.Context, in *Tank, opts ...grpc.CallOption) (*Tank, error) {
	out := new(Tank)
	err := c.cc.Invoke(ctx, "/guide.Bolo/RegisterTank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boloClient) ServerGameStateStream(ctx context.Context, in *WorldInput, opts ...grpc.CallOption) (Bolo_ServerGameStateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bolo_serviceDesc.Streams[0], "/guide.Bolo/ServerGameStateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloServerGameStateStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Bolo_ServerGameStateStreamClient interface {
	Recv() (*GameState, error)
	grpc.ClientStream
}

type boloServerGameStateStreamClient struct {
	grpc.ClientStream
}

func (x *boloServerGameStateStreamClient) Recv() (*GameState, error) {
	m := new(GameState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *boloClient) Chat(ctx context.Context, opts ...grpc.CallOption) (Bolo_ChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bolo_serviceDesc.Streams[1], "/guide.Bolo/Chat", opts...)
	if err != nil {
		return nil, err
	}
	x := &boloChatClient{stream}
	return x, nil
}

type Bolo_ChatClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type boloChatClient struct {
	grpc.ClientStream
}

func (x *boloChatClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *boloChatClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BoloServer is the server API for Bolo service.
type BoloServer interface {
	RegisterTank(context.Context, *Tank) (*Tank, error)
	ServerGameStateStream(*WorldInput, Bolo_ServerGameStateStreamServer) error
	Chat(Bolo_ChatServer) error
}

// UnimplementedBoloServer can be embedded to have forward compatible implementations.
type UnimplementedBoloServer struct {
}

func (*UnimplementedBoloServer) RegisterTank(context.Context, *Tank) (*Tank, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTank not implemented")
}
func (*UnimplementedBoloServer) ServerGameStateStream(*WorldInput, Bolo_ServerGameStateStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ServerGameStateStream not implemented")
}
func (*UnimplementedBoloServer) Chat(Bolo_ChatServer) error {
	return status.Errorf(codes.Unimplemented, "method Chat not implemented")
}

func RegisterBoloServer(s *grpc.Server, srv BoloServer) {
	s.RegisterService(&_Bolo_serviceDesc, srv)
}

func _Bolo_RegisterTank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoloServer).RegisterTank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guide.Bolo/RegisterTank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoloServer).RegisterTank(ctx, req.(*Tank))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bolo_ServerGameStateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WorldInput)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BoloServer).ServerGameStateStream(m, &boloServerGameStateStreamServer{stream})
}

type Bolo_ServerGameStateStreamServer interface {
	Send(*GameState) error
	grpc.ServerStream
}

type boloServerGameStateStreamServer struct {
	grpc.ServerStream
}

func (x *boloServerGameStateStreamServer) Send(m *GameState) error {
	return x.ServerStream.SendMsg(m)
}

func _Bolo_Chat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BoloServer).Chat(&boloChatServer{stream})
}

type Bolo_ChatServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type boloChatServer struct {
	grpc.ServerStream
}

func (x *boloChatServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *boloChatServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Bolo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "guide.Bolo",
	HandlerType: (*BoloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTank",
			Handler:    _Bolo_RegisterTank_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServerGameStateStream",
			Handler:       _Bolo_ServerGameStateStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Chat",
			Handler:       _Bolo_Chat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "guide/bolo.proto",
}
